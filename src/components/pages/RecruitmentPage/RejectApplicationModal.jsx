import React, { useState } from "react";
import {
  Modal,
  Form,
  Input,
  Button,
  message,
  Radio,
  Space,
  Divider,
} from "antd";
import {
  CloseOutlined,
  LoadingOutlined,
  ExclamationCircleOutlined,
  EditOutlined,
  CheckCircleOutlined,
} from "@ant-design/icons";
import api from "@/services/api/axios";

const { TextArea } = Input;

const RejectApplicationModal = ({
  visible,
  onCancel,
  onSuccess,
  applicationId,
  applicantName,
  postTitle,
}) => {
  const [form] = Form.useForm();
  const [loading, setLoading] = useState(false);
  const [rejectType, setRejectType] = useState("quick");

  const quickReasons = [
    {
      key: "experience",
      value:
        "Kinh nghi·ªám ch∆∞a ƒë√°p ·ª©ng y√™u c·∫ßu c·ªßa d·ª± √°n. Ch√∫ng t√¥i khuy·∫øn kh√≠ch b·∫°n ti·∫øp t·ª•c h·ªçc h·ªèi v√† ·ª©ng tuy·ªÉn l·∫°i trong t∆∞∆°ng lai.",
    },
    {
      key: "skills",
      value:
        "K·ªπ nƒÉng hi·ªán t·∫°i ch∆∞a ph√π h·ª£p v·ªõi c√¥ng ngh·ªá m√† d·ª± √°n ƒëang s·ª≠ d·ª•ng. H√£y b·ªï sung th√™m ki·∫øn th·ª©c v√† th·ª≠ l·∫°i nh√©!",
    },
    {
      key: "time",
      value:
        "D·ª± √°n y√™u c·∫ßu cam k·∫øt th·ªùi gian cao h∆°n mong ƒë·ª£i c·ªßa b·∫°n. C·∫£m ∆°n b·∫°n ƒë√£ quan t√¢m!",
    },
    {
      key: "team_full",
      value:
        "Team ƒë√£ ƒë·ªß th√†nh vi√™n cho giai ƒëo·∫°n hi·ªán t·∫°i. Ch√∫ng t√¥i s·∫Ω li√™n h·ªá n·∫øu c√≥ c∆° h·ªôi kh√°c ph√π h·ª£p.",
    },
    {
      key: "direction",
      value:
        "H∆∞·ªõng ph√°t tri·ªÉn c√° nh√¢n c·ªßa b·∫°n ch∆∞a ho√†n to√†n ph√π h·ª£p v·ªõi ƒë·ªãnh h∆∞·ªõng d·ª± √°n. Ch√∫c b·∫°n t√¨m ƒë∆∞·ª£c d·ª± √°n ph√π h·ª£p h∆°n!",
    },
  ];

  const handleSubmit = async (values) => {
    try {
      setLoading(true);

      let rejectionReason = "";
      if (rejectType === "quick" && values.quickReason) {
        rejectionReason = values.quickReason;
      } else if (rejectType === "custom" && values.customReason) {
        rejectionReason = values.customReason.trim();
      }

      const response = await api.patch(
        `/recruitment-posts/_/applications/${applicationId}/reject`,
        { rejectionReason: rejectionReason || null }
      );

      if (response.status === 200) {
        message.success("ƒê√£ t·ª´ ch·ªëi ·ª©ng vi√™n v√† g·ª≠i email th√¥ng b√°o");
        form.resetFields();
        onSuccess && onSuccess();
        onCancel();
      } else {
        message.error("C√≥ l·ªói x·∫£y ra khi t·ª´ ch·ªëi ·ª©ng tuy·ªÉn");
      }
    } catch (error) {
      console.error("Reject application error:", error);

      if (error.response) {
        const errorMessage =
          error.response.data?.message || "C√≥ l·ªói x·∫£y ra khi t·ª´ ch·ªëi ·ª©ng tuy·ªÉn";
        message.error(errorMessage);
      } else {
        message.error("Kh√¥ng th·ªÉ k·∫øt n·ªëi ƒë·∫øn m√°y ch·ªß. Vui l√≤ng th·ª≠ l·∫°i sau.");
      }
    } finally {
      setLoading(false);
    }
  };

  const handleCancel = () => {
    if (!loading) {
      form.resetFields();
      setRejectType("quick");
      onCancel();
    }
  };

  return (
    <Modal
      title={
        <div className="flex items-center gap-4 p-2">
          <div className="w-12 h-12 rounded-xl bg-gradient-to-br from-red-400 to-red-600 flex items-center justify-center shadow-lg">
            <CloseOutlined className="text-white text-lg" />
          </div>
          <div>
            <h3 className="text-xl font-bold text-gray-900 m-0">
              T·ª´ ch·ªëi ·ª©ng tuy·ªÉn
            </h3>
            <p className="text-sm text-gray-600 m-0 mt-1">
              üë§ {applicantName} ‚Ä¢ üìã {postTitle}
            </p>
          </div>
        </div>
      }
      open={visible}
      onCancel={handleCancel}
      footer={null}
      width={650}
      className="reject-application-modal"
      maskClosable={!loading}
      closable={!loading}
    >
      <div className="space-y-6 py-4">
        {/* Warning Section */}
        <div className="bg-red-50 border border-red-200 rounded-2xl p-6">
          <div className="flex items-start gap-4">
            <div className="w-10 h-10 rounded-full bg-red-100 flex items-center justify-center flex-shrink-0">
              <ExclamationCircleOutlined className="text-red-600 text-lg" />
            </div>
            <div>
              <h4 className="text-lg font-semibold text-red-800 mb-2">
                X√°c nh·∫≠n t·ª´ ch·ªëi ·ª©ng tuy·ªÉn
              </h4>
              <p className="text-red-700 mb-0">
                B·∫°n s·∫Ω t·ª´ ch·ªëi ·ª©ng vi√™n <strong>{applicantName}</strong> cho v·ªã
                tr√≠ n√†y. ·ª®ng vi√™n s·∫Ω nh·∫≠n ƒë∆∞·ª£c email th√¥ng b√°o k√®m l√Ω do (n·∫øu
                c√≥).
              </p>
            </div>
          </div>
        </div>

        <Form
          form={form}
          layout="vertical"
          onFinish={handleSubmit}
          initialValues={{ rejectType: "quick" }}
        >
          {/* Reject Type Selection */}
          <div className="bg-white border border-gray-200 rounded-2xl p-6">
            <h4 className="text-lg font-semibold text-gray-800 mb-4 flex items-center gap-2">
              <EditOutlined className="text-blue-600" />
              Ch·ªçn c√°ch ph·∫£n h·ªìi
            </h4>

            <Radio.Group
              value={rejectType}
              onChange={(e) => setRejectType(e.target.value)}
              className="w-full"
            >
              <div className="space-y-3">
                <div className="border border-gray-200 rounded-xl p-4 hover:border-blue-300 transition-colors">
                  <Radio value="quick" className="mb-2">
                    <span className="font-medium text-gray-800">
                      S·ª≠ d·ª•ng l√Ω do c√≥ s·∫µn
                    </span>
                  </Radio>
                  <p className="text-sm text-gray-600 ml-6">
                    Ch·ªçn t·ª´ c√°c l√Ω do ph·ªï bi·∫øn, ti·∫øt ki·ªám th·ªùi gian
                  </p>
                </div>

                <div className="border border-gray-200 rounded-xl p-4 hover:border-blue-300 transition-colors">
                  <Radio value="custom" className="mb-2">
                    <span className="font-medium text-gray-800">
                      Vi·∫øt l√Ω do t√πy ch·ªânh
                    </span>
                  </Radio>
                  <p className="text-sm text-gray-600 ml-6">
                    Ph·∫£n h·ªìi chi ti·∫øt v√† c√° nh√¢n h√≥a
                  </p>
                </div>

                <div className="border border-gray-200 rounded-xl p-4 hover:border-blue-300 transition-colors">
                  <Radio value="no_reason" className="mb-2">
                    <span className="font-medium text-gray-800">
                      Kh√¥ng g·ª≠i l√Ω do c·ª• th·ªÉ
                    </span>
                  </Radio>
                  <p className="text-sm text-gray-600 ml-6">
                    Ch·ªâ th√¥ng b√°o k·∫øt qu·∫£, kh√¥ng ƒë∆∞a ra l√Ω do
                  </p>
                </div>
              </div>
            </Radio.Group>
          </div>

          {/* Quick Reasons */}
          {rejectType === "quick" && (
            <div className="bg-blue-50 border border-blue-200 rounded-2xl p-6">
              <h4 className="text-lg font-semibold text-blue-800 mb-4">
                Ch·ªçn l√Ω do ph√π h·ª£p
              </h4>

              <Form.Item
                name="quickReason"
                rules={[{ required: true, message: "Vui l√≤ng ch·ªçn m·ªôt l√Ω do" }]}
              >
                <Radio.Group className="w-full">
                  <div className="space-y-3">
                    {quickReasons.map((reason, index) => (
                      <div
                        key={reason.key}
                        className="bg-white rounded-xl p-4 border border-blue-100"
                      >
                        <Radio value={reason.value} className="mb-2">
                          <span className="font-medium text-gray-800">
                            L√Ω do {index + 1}
                          </span>
                        </Radio>
                        <p className="text-sm text-gray-600 ml-6 leading-relaxed">
                          "{reason.value}"
                        </p>
                      </div>
                    ))}
                  </div>
                </Radio.Group>
              </Form.Item>
            </div>
          )}

          {/* Custom Reason */}
          {rejectType === "custom" && (
            <div className="bg-purple-50 border border-purple-200 rounded-2xl p-6">
              <h4 className="text-lg font-semibold text-purple-800 mb-4">
                Vi·∫øt l√Ω do t√πy ch·ªânh
              </h4>

              <Form.Item
                name="customReason"
                rules={[
                  { required: true, message: "Vui l√≤ng nh·∫≠p l√Ω do t·ª´ ch·ªëi" },
                  { min: 10, message: "L√Ω do ph·∫£i c√≥ √≠t nh·∫•t 10 k√Ω t·ª±" },
                  { max: 1000, message: "L√Ω do kh√¥ng ƒë∆∞·ª£c qu√° 1000 k√Ω t·ª±" },
                ]}
              >
                <TextArea
                  placeholder="H√£y vi·∫øt ph·∫£n h·ªìi ch√¢n th√†nh v√† x√¢y d·ª±ng ƒë·ªÉ gi√∫p ·ª©ng vi√™n hi·ªÉu r√µ l√Ω do v√† c√≥ ƒë·ªông l·ª±c c·∫£i thi·ªán...

V√≠ d·ª•: 'C·∫£m ∆°n b·∫°n ƒë√£ quan t√¢m ƒë·∫øn d·ª± √°n c·ªßa ch√∫ng t√¥i. Sau khi xem x√©t k·ªπ l∆∞·ª°ng, ch√∫ng t√¥i nh·∫≠n th·∫•y r·∫±ng...' "
                  rows={8}
                  className="rounded-xl border-purple-200 focus:border-purple-400 focus:ring-2 focus:ring-purple-100 transition-all duration-200 resize-none"
                  disabled={loading}
                  showCount
                  maxLength={1000}
                />
              </Form.Item>

              <div className="bg-purple-100 border border-purple-200 rounded-lg p-4 mt-4">
                <div className="flex items-start gap-3">
                  <CheckCircleOutlined className="text-purple-600 mt-1 flex-shrink-0" />
                  <div>
                    <h5 className="font-medium text-purple-800 mb-2">
                      M·∫πo vi·∫øt ph·∫£n h·ªìi t√≠ch c·ª±c:
                    </h5>
                    <ul className="text-sm text-purple-700 space-y-1">
                      <li>‚Ä¢ C·∫£m ∆°n ·ª©ng vi√™n ƒë√£ quan t√¢m</li>
                      <li>‚Ä¢ ƒê∆∞a ra l√Ω do c·ª• th·ªÉ nh∆∞ng x√¢y d·ª±ng</li>
                      <li>‚Ä¢ Khuy·∫øn kh√≠ch ph√°t tri·ªÉn k·ªπ nƒÉng</li>
                      <li>‚Ä¢ Ch√∫c h·ªç t√¨m ƒë∆∞·ª£c c∆° h·ªôi ph√π h·ª£p</li>
                    </ul>
                  </div>
                </div>
              </div>
            </div>
          )}

          {/* No Reason Selected */}
          {rejectType === "no_reason" && (
            <div className="bg-gray-50 border border-gray-200 rounded-2xl p-6">
              <div className="text-center">
                <div className="w-16 h-16 rounded-full bg-gray-200 flex items-center justify-center mx-auto mb-4">
                  <ExclamationCircleOutlined className="text-gray-500 text-2xl" />
                </div>
                <h4 className="text-lg font-semibold text-gray-700 mb-2">
                  T·ª´ ch·ªëi kh√¥ng k√®m l√Ω do
                </h4>
                <p className="text-gray-600">
                  ·ª®ng vi√™n s·∫Ω ch·ªâ nh·∫≠n ƒë∆∞·ª£c th√¥ng b√°o chung v·ªÅ k·∫øt qu·∫£ ·ª©ng
                  tuy·ªÉn.
                </p>
              </div>
            </div>
          )}

          {/* Action Buttons */}
          <div className="flex gap-4 pt-4">
            <Button
              type="default"
              onClick={handleCancel}
              disabled={loading}
              className="flex-1 h-12 rounded-xl border-gray-200 text-gray-600 hover:border-gray-300 hover:text-gray-700 transition-all duration-200 font-medium"
              size="large"
            >
              H·ªßy b·ªè
            </Button>
            <Button
              type="primary"
              htmlType="submit"
              loading={loading}
              disabled={loading}
              icon={loading ? <LoadingOutlined /> : <CloseOutlined />}
              className="flex-1 h-12 bg-gradient-to-r from-red-500 to-red-600 hover:from-red-600 hover:to-red-700 border-none rounded-xl shadow-lg hover:shadow-xl transition-all duration-300 font-semibold"
              size="large"
            >
              {loading ? "ƒêang x·ª≠ l√Ω..." : "X√°c nh·∫≠n t·ª´ ch·ªëi"}
            </Button>
          </div>
        </Form>

        {/* Info Footer */}
        <div className="bg-yellow-50 border border-yellow-200 rounded-xl p-4 mt-6">
          <div className="flex items-start gap-3">
            <span className="text-yellow-600 text-lg">üí°</span>
            <div>
              <h5 className="font-medium text-yellow-800 mb-1">
                L∆∞u √Ω quan tr·ªçng
              </h5>
              <ul className="text-sm text-yellow-700 space-y-1">
                <li>‚Ä¢ Email s·∫Ω ƒë∆∞·ª£c g·ª≠i t·ª± ƒë·ªông ƒë·∫øn ·ª©ng vi√™n</li>
                <li>‚Ä¢ Ph·∫£n h·ªìi x√¢y d·ª±ng gi√∫p ·ª©ng vi√™n c·∫£i thi·ªán b·∫£n th√¢n</li>
                <li>‚Ä¢ H√†nh ƒë·ªông n√†y kh√¥ng th·ªÉ ho√†n t√°c</li>
              </ul>
            </div>
          </div>
        </div>
      </div>
    </Modal>
  );
};

export default RejectApplicationModal;
